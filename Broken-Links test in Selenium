package Webdriver_basic;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.ArrayList;
import java.util.List;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.firefox.FirefoxDriver;
 

public class  BrokenLinkTest {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
 	   System.setProperty("webdriver.gecko.driver","C://Selenium//geckodriver/geckodriver.exe");

 		 WebDriver driver = new FirefoxDriver();
 		driver.manage().window().maximize();
		driver.get("https://amazon.com");
		
		List<WebElement> links = driver.findElements(By.tagName("a"));
		
		System.out.println("No of links are "+ links.size());
		
		List<String> urlList = new ArrayList<String>();
		
		for(WebElement e : links)
		{
			String url = e.getAttribute("href");
			urlList.add(url);
			// checkBrokenLinks(url);
			
		}
		
		long stTime = System.currentTimeMillis();
		urlList.parallelStream().forEach(e -> checkBrokenLinks(e));
		long endTime = System.currentTimeMillis();
		System.out.println("Total time to complete is :" + (endTime-stTime));
    driver.quit();
}
   public static void checkBrokenLinks(String linkUrl) {
	   
	   try {
		   URL url = new URL(linkUrl);
		   
		  HttpURLConnection httpurlconnection = (HttpURLConnection) url.openConnection();
		  httpurlconnection.setConnectTimeout(500);
		  httpurlconnection.connect();
		  if(httpurlconnection.getResponseCode()>=400) {
			  System.out.println(linkUrl +"----->"+httpurlconnection.getResponseMessage()+" is a broken link");
		  }else {
			  
		  System.out.println(linkUrl +"----->"+httpurlconnection.getResponseMessage());
		  }
	   }
	   catch(Exception e) {
		   
	   }
   }
	
	
}
		
		

